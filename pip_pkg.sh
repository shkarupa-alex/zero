#!/usr/bin/env bash
set -e

PLATFORM="$(uname -s | tr 'A-Z' 'a-z')"

function main() {
  if [ $# -lt 1 ] ; then
    echo "No destination dir provided"
    exit 1
  fi

  # Create the directory, then do dirname on a non-existent file inside it to
  # give us an absolute paths with tilde characters resolved to the destination
  # directory. Readlink -f is a cleaner way of doing this but is not available
  # on a fresh macOS install.
  mkdir -p "$1"
  DEST="$(dirname "${1}/does_not_exist")"
  echo "=== destination directory: ${DEST}"

  TMPDIR=$(mktemp -d -t tmp.XXXXXXXXXX)

  echo $(date) : "=== Using tmpdir: ${TMPDIR}"

  echo "=== Copy TensorFlow Zero files"
  # Here are bazel-bin/pip_pkg.runfiles directory structure.
  # bazel-bin/pip_pkg.runfiles
  # |- <maybe other directories generated by bazel build>
  # |- org_python_pypi_backports_weakref
  # |- org_tensorflow
  # |- protobuf
  # |- six_archive
  # |- tensorflow_zero
  #   |- external
  #   |- pip_pkg
  #   |- pip_pkg.sh
  #   |- MANIFEST.in (needed)
  #   |- setup.py (needed)
  #   |- tensorflow_zero (needed)
  #
  # To build tensorflow zero wheel, we only need setup.py, MANIFEST.in, and
  # python and .so files under tensorflow_zero/tensorflow_zero.
  # So we extract those to ${TMPDIR}.
  cp bazel-bin/pip_pkg.runfiles/tensorflow_zero/setup.py "${TMPDIR}"
  cp bazel-bin/pip_pkg.runfiles/tensorflow_zero/MANIFEST.in "${TMPDIR}"
  cp -R \
    bazel-bin/pip_pkg.runfiles/tensorflow_zero/tensorflow_zero \
    "${TMPDIR}"

  echo "=== Copy TensorFlow Zero root and cc files"
  cp README.md ${TMPDIR}
  cp LICENSE ${TMPDIR}
  cp -R \
    tensorflow_zero/cc \
    "${TMPDIR}/tensorflow_zero"

  pushd ${TMPDIR}
  if [ "${TFL_SDIST}" = true ]; then
    echo $(date) : "=== Building source distribution and wheel"
  else
    echo $(date) : "=== Building wheel"
  fi

  if [  -z "$2"  ]; then
    if [ "${TFL_SDIST}" = true ]; then
      python setup.py sdist > /dev/null
    fi
    python setup.py bdist_wheel > /dev/null
  else
    if [ "${TFL_SDIST}" = true ]; then
      python setup.py "$2" sdist > /dev/null
    fi
    python setup.py "$2" bdist_wheel >/dev/null
  fi

  cp dist/* "${DEST}"
  popd
  # rm -rf ${TMPDIR}
  echo $(date) : "=== Output tar ball and wheel file are in: ${DEST}"
}

main "$@"
