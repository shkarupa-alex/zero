#!/usr/bin/env bash
set -e

function main() {
  if [ $# -lt 1 ] ; then
    echo "No destination directory provided"
    exit 1
  fi

  echo `pwd`

  # Create the directory, then do dirname on a non-existent file inside it to give us an absolute paths with tilde
  # characters resolved to the destination directory. Readlink -f is a cleaner way of doing this but is not available
  # on a fresh macOS install.
  mkdir -p "$1"
  DEST="$(dirname "${1}/does_not_exist")"
  echo "=== destination directory: ${DEST}"

  TMPDIR=$(mktemp -d -t tmp.XXXXXXXXXX)
  echo $(date) : "=== Using temporary directory: ${TMPDIR}"

  echo "=== Copy TensorFlow Zero files"
  # Here are bazel-bin/pip_package/pip_package.runfiles directory structure.
  # |- tensorflow_zero
  #   |- tensorflow_zero (needed)
  #   |- pip_pkg
  #   |- pip_pkg.sh
  # |- MANIFEST
  # |- <maybe other directories generated by bazel build>
  #
  # To build TensorFlow Zero wheel, we only need setup.py, MANIFEST.in, python and .so files under
  # tensorflow_zero/tensorflow_zero. So we extract those to ${TMPDIR}.
  cp -R bazel-bin/pip_package/pip_package.runfiles/tensorflow_zero/tensorflow_zero ${TMPDIR}
  find ${TMPDIR}/tensorflow_zero/cc -name '__init__.py'  -type f -delete
  cp pip_package/LICENSE ${TMPDIR}
  cp pip_package/MANIFEST.in ${TMPDIR}
  cp pip_package/README.md ${TMPDIR}
  cp pip_package/setup.py ${TMPDIR}

  pushd ${TMPDIR}

  echo $(date) : "=== Building wheel"
  python setup.py bdist_wheel
  cp dist/* ${DEST}

  popd

  rm -rf ${TMPDIR}
  echo $(date) : "=== Output wheel is in: ${DEST}"
}

main "$@"
